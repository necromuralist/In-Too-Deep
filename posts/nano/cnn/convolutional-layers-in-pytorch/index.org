#+BEGIN_COMMENT
.. title: Convolutional Layers in PyTorch
.. slug: convolutional-layers-in-pytorch
.. date: 2018-12-06 21:46:04 UTC-08:00
.. tags: cnn,pytorch,lecture
.. category: PyTorch
.. link: 
.. description: Defining CNNs in pytorch.
.. type: text

#+END_COMMENT
#+OPTIONS: ^:{}
#+TOC: headlines 1
* Introduction
  This is from [[https://github.com/udacity/deep-learning-v2-pytorch.git][Udacity's Deep Learning Repository]] which supports their Deep Learning Nanodegree.
* Convolutional Layers in PyTorch
  The Convolutional class (Conv2D) is part of the =nn= module so you have to import that.
#+BEGIN_SRC python
import torch.nn as nn
#+END_SRC
* Questions
#+BEGIN_SRC python
nn.Conv2d(3, 10, 3)
nn.MaxPool2d(4, 4)
nn.Conv2d(10, 20, 5, padding=2)
nn.MaxPool2d(2,2)
#+END_SRC
** Question 1
After going through the four-layer sequence, what is the depth of the final output?

 - [ ] 1
 - [ ] 3
 - [ ] 10
 - [ ] 20
 - [ ] 40

** Question 2
   What is the x-y size of the output of the final maxpooling layer?
   - [ ] 8
   - [ ] 15
   - [ ] 16
   - [ ] 30
   - [ ] 32
** Question 3
   How many parameters, total, will be left after an image passes through all four of the above layers in sequence?
   - [ ] 4 x 4 x 20
   - [ ] 128 x 20
   - [ ] 16 x 16 x 20
   - [ ] 32 x 32 x 20

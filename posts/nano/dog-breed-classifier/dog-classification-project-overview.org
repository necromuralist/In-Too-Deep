#+BEGIN_COMMENT
.. title: Dog Classification Project Overview
.. slug: dog-classification-project-overview
.. date: 2018-11-25 16:33:14 UTC-08:00
.. tags: project,cnn,classification
.. category: Project
.. link: 
.. description: An overview of the Dog Classification Project.
.. type: text
#+END_COMMENT
#+OPTIONS: ^:{}
#+TOC: headlines 1
* Project Overview
In this project we will build a pipeline that can be used within a web or mobile app to process real-world, user-supplied images.  Given an image of a dog, our algorithm will identify an estimate of the canineâ€™s breed.  If supplied an image of a human, the code will identify the dog breed that the person most resembles.

* The Data

The [[https://s3-us-west-1.amazonaws.com/udacity-aind/dog-project/dogImages.zip][dog dataset]] is in a zip-file hosted on Amazon Web Services. The folder should contain three folders (=test=, =train=, and =valid=) and each of these folders should have 133 folders, one for each dog-breed. It looks like the [[http://vision.stanford.edu/aditya86/ImageNetDogs/][Stanford Dogs Dataset]], but the Stanford data set has 120 breeds, so I don't know the actual source.
The [[http://vis-www.cs.umass.edu/lfw/lfw.tgz][human dataset]] seems to be the [[http://vis-www.cs.umass.edu/lfw/][Labeled Faces in the Wild]] data set which was built to study the problem of facial recognition. It's made up of real photos of people taken from the web. Each photo sits in a sub-folder that was given the name of the person (e.g. =Michelle_Yeoh=). The folder hasn't been split into train-test-validiation folders the way the dog dataset was.

* Some Rules
  - **Unless requested, do not modify code that has already been included.**

  - In the notebook, you will need to train CNNs in PyTorch.  If your CNN is taking too long to train, feel free to pursue one of the options under the section /Accelerating the Training Process/ below.

* (Optionally) Accelerating the Training Process 

If your code is taking too long to run, you will need to either reduce the complexity of your chosen CNN architecture or switch to running your code on a GPU.  If you'd like to use a GPU, you can spin up an instance of your own:

** Amazon Web Services

You can use Amazon Web Services to launch an EC2 GPU instance. (This costs money, but enrolled students should see a coupon code in their student =resources=.)

* Evaluation

Your project will be reviewed by a Udacity reviewer against the CNN project rubric.  Review this rubric thoroughly and self-evaluate your project before submission.  All criteria found in the rubric must meet specifications for you to pass.

* Project Submission

Your submission should consist of the github link to your repository.  Your repository should contain:
- The =dog_app.ipynb= file with fully functional code, all code cells executed and displaying output, and all questions answered.
- An HTML or PDF export of the project notebook with the name =report.html= or =report.pdf=.

Please do /NOT/ include any of the project data sets provided in the ~dogImages/~ or ~lfw/~ folders.

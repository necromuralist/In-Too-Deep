<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Neurotic Networking (Posts about filters)</title><link>https://necromuralist.github.io/Neurotic-Networking/</link><description></description><atom:link href="https://necromuralist.github.io/Neurotic-Networking/categories/filters.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents Â© 2020 &lt;a href="mailto:necromuralist@protonmail.com"&gt;Cloistered Monkey&lt;/a&gt; </copyright><lastBuildDate>Tue, 18 Aug 2020 13:39:50 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Custom Filters</title><link>https://necromuralist.github.io/Neurotic-Networking/posts/nano/cnn/custom-filters/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Neurotic-Networking/posts/nano/cnn/custom-filters/#org9729eb1"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Neurotic-Networking/posts/nano/cnn/custom-filters/#org364c34d"&gt;Set Up&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Neurotic-Networking/posts/nano/cnn/custom-filters/#orgf011c3a"&gt;Read in the image&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Neurotic-Networking/posts/nano/cnn/custom-filters/#org580848d"&gt;Convert the image to grayscale&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Neurotic-Networking/posts/nano/cnn/custom-filters/#org22ecde0"&gt;Create a custom kernel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org9729eb1" class="outline-2"&gt;
&lt;h2 id="org9729eb1"&gt;Introduction&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org9729eb1"&gt;
&lt;p&gt;
This is from &lt;a href="https://github.com/udacity/deep-learning-v2-pytorch.git"&gt;Udacity's Deep Learning Repository&lt;/a&gt; which supports their Deep Learning Nanodegree.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org364c34d" class="outline-2"&gt;
&lt;h2 id="org364c34d"&gt;Set Up&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org364c34d"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgdba080d" class="outline-3"&gt;
&lt;h3 id="orgdba080d"&gt;Imports&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgdba080d"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org4c6d673" class="outline-4"&gt;
&lt;h4 id="org4c6d673"&gt;From PyPi&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org4c6d673"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;from dotenv import load_dotenv
import matplotlib.pyplot as pyplot
import matplotlib.image as mpimg
import cv2
import numpy
import seaborn
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org5f63ee3" class="outline-4"&gt;
&lt;h4 id="org5f63ee3"&gt;This Project&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org5f63ee3"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;from neurotic.tangles.data_paths import DataPathTwo
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org57d4def" class="outline-3"&gt;
&lt;h3 id="org57d4def"&gt;Set Up&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org57d4def"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;get_ipython().run_line_magic('matplotlib', 'inline')
seaborn.set(style="whitegrid",
	    rc={"axes.grid": False,
		"font.family": ["sans-serif"],
		"font.sans-serif": ["Latin Modern Sans", "Lato"],
		"figure.figsize": (14, 12)},
	    font_scale=3)
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgf011c3a" class="outline-2"&gt;
&lt;h2 id="orgf011c3a"&gt;Read in the image&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgf011c3a"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;load_dotenv()
path = DataPathTwo("curved_lane.jpg", folder_key="CNN")
print(path.from_folder)
assert path.from_folder.is_file()
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
/home/hades/datasets/cnn/curved_lane.jpg

&lt;/pre&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;image = mpimg.imread(path.from_folder)

axe_image = pyplot.imshow(image)
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="figure"&gt;
&lt;p&gt;&lt;img src="https://necromuralist.github.io/Neurotic-Networking/posts/nano/cnn/custom-filters/curved_lane.png" alt="curved_lane.png"&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org580848d" class="outline-2"&gt;
&lt;h2 id="org580848d"&gt;Convert the image to grayscale&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org580848d"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gray = cv2.cvtColor(image, cv2.COLOR_RGB2GRAY)
axe_image = pyplot.imshow(gray, cmap='gray')
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="figure"&gt;
&lt;p&gt;&lt;img src="https://necromuralist.github.io/Neurotic-Networking/posts/nano/cnn/custom-filters/gray_curved.png" alt="gray_curved.png"&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org22ecde0" class="outline-2"&gt;
&lt;h2 id="org22ecde0"&gt;Create a custom kernel&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org22ecde0"&gt;
&lt;p&gt;
Below, you've been given one common type of edge detection filter: a Sobel operator.
&lt;/p&gt;

&lt;p&gt;
The Sobel filter is very commonly used in edge detection and in finding patterns in intensity in an image. Applying a Sobel filter to an image is a way of &lt;b&gt;&lt;b&gt;taking (an approximation) of the derivative of the image&lt;/b&gt;&lt;/b&gt; in the x or y direction, separately. The operators look as follows.
&lt;/p&gt;


&lt;div class="figure"&gt;
&lt;p&gt;&lt;img src="https://necromuralist.github.io/Neurotic-Networking/posts/nano/cnn/custom-filters/sobel_ops.png" alt="sobel_ops.png"&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;
For a challenge, see if you can put the image through a series of filters: first one that blurs the image (takes an average of pixels), and then one that detects the edges.
&lt;/p&gt;

&lt;p&gt;
3x3 array for edge detection
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sobel_y = numpy.array([[ -1, -2, -1], 
		       [  0, 0, 0], 
		       [ 1, 2, 1]])
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;filtered_image = cv2.filter2D(gray, -1, sobel_y)

axe_image = pyplot.imshow(filtered_image, cmap='gray')
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="figure"&gt;
&lt;p&gt;&lt;img src="https://necromuralist.github.io/Neurotic-Networking/posts/nano/cnn/custom-filters/sobel_1.png" alt="sobel_1.png"&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org666cd04" class="outline-3"&gt;
&lt;h3 id="org666cd04"&gt;Prewitt&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org666cd04"&gt;
&lt;p&gt;
This matrix is from &lt;a href="https://hipersayanx.blogspot.com/2015/08/convolutional-edge-detection-filters.html"&gt;this&lt;/a&gt; blog post.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;prewitt = numpy.array([[-1, -1, -1],
		       [0, 0, 0],
		       [1, 1, 1]])
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;filtered_prewitt = cv2.filter2D(gray, -1, prewitt)

axe_image = pyplot.imshow(filtered_prewitt, cmap='gray')
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="figure"&gt;
&lt;p&gt;&lt;img src="https://necromuralist.github.io/Neurotic-Networking/posts/nano/cnn/custom-filters/prewitt.png" alt="prewitt.png"&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org9c5a5d9" class="outline-3"&gt;
&lt;h3 id="org9c5a5d9"&gt;Sharpen&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org9c5a5d9"&gt;
&lt;p&gt;
This is from the &lt;a href="https://en.wikipedia.org/wiki/Kernel_(image_processing)"&gt;Wikipedia article&lt;/a&gt; about kernels for image processing.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mask = numpy.array([[0, -1, 0],
		    [-1, 5, -1],
		    [0, -1, 0]])
sharpened = cv2.filter2D(gray, -1, mask)

axe_image = pyplot.imshow(sharpened, cmap='gray')
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="figure"&gt;
&lt;p&gt;&lt;img src="https://necromuralist.github.io/Neurotic-Networking/posts/nano/cnn/custom-filters/sharpen.png" alt="sharpen.png"&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;
This one isn't so obvious, but if you compare it to the original grayscale image you'll see that it is a little less blurry.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>cnn</category><category>filters</category><guid>https://necromuralist.github.io/Neurotic-Networking/posts/nano/cnn/custom-filters/</guid><pubDate>Mon, 03 Dec 2018 00:06:32 GMT</pubDate></item></channel></rss>
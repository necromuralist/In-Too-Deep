<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Neurotic Networking (Posts about fastai)</title><link>https://necromuralist.github.io/Neurotic-Networking/</link><description></description><atom:link href="https://necromuralist.github.io/Neurotic-Networking/categories/cat_fastai.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2021 &lt;a href="mailto:necromuralist@protonmail.com"&gt;Cloistered Monkey&lt;/a&gt; &lt;a rel="license" href="http://creativecommons.org/licenses/by/4.0/"&gt;&lt;img id="license-image" alt="Creative Commons License" style="border-width:0" src="https://i.creativecommons.org/l/by/4.0/80x15.png" /&gt;&lt;/a&gt;This work is licensed under a &lt;a rel="license" href="http://creativecommons.org/licenses/by/4.0/"&gt;Creative Commons Attribution 4.0 International License&lt;/a&gt;.</copyright><lastBuildDate>Fri, 01 Jan 2021 00:37:59 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Hand-rolling a CountVectorizer</title><link>https://necromuralist.github.io/Neurotic-Networking/posts/fastai/hand-rolling-a-countvectorizer/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Neurotic-Networking/posts/fastai/hand-rolling-a-countvectorizer/#org8a26854"&gt;Beginning&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Neurotic-Networking/posts/fastai/hand-rolling-a-countvectorizer/#orga8443a7"&gt;Imports&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Neurotic-Networking/posts/fastai/hand-rolling-a-countvectorizer/#org86ffac0"&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Neurotic-Networking/posts/fastai/hand-rolling-a-countvectorizer/#orgec41d75"&gt;PyPi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Neurotic-Networking/posts/fastai/hand-rolling-a-countvectorizer/#org244d18c"&gt;Others&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Neurotic-Networking/posts/fastai/hand-rolling-a-countvectorizer/#org578920e"&gt;Setup&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Neurotic-Networking/posts/fastai/hand-rolling-a-countvectorizer/#org7e94170"&gt;Plotting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Neurotic-Networking/posts/fastai/hand-rolling-a-countvectorizer/#org86196dd"&gt;The Data Set&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Neurotic-Networking/posts/fastai/hand-rolling-a-countvectorizer/#orge807638"&gt;The Text List&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Neurotic-Networking/posts/fastai/hand-rolling-a-countvectorizer/#org5de6526"&gt;Creating a Term-Document Matrix&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Neurotic-Networking/posts/fastai/hand-rolling-a-countvectorizer/#org7d1b021"&gt;End&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Neurotic-Networking/posts/fastai/hand-rolling-a-countvectorizer/#orged53df1"&gt;Reference&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Neurotic-Networking/posts/fastai/hand-rolling-a-countvectorizer/#orgf8a3c3c"&gt;The Dataset&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org8a26854" class="outline-2"&gt;
&lt;h2 id="org8a26854"&gt;Beginning&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org8a26854"&gt;
&lt;p&gt;
This is part of lesson 3 from the &lt;a href="https://github.com/fastai/course-nlp"&gt;fastai NLP course&lt;/a&gt;.
&lt;/p&gt;
&lt;/div&gt;
&lt;div id="outline-container-orga8443a7" class="outline-3"&gt;
&lt;h3 id="orga8443a7"&gt;Imports&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orga8443a7"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org86ffac0" class="outline-4"&gt;
&lt;h4 id="org86ffac0"&gt;Python&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org86ffac0"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;from collections import Counter
from functools import partial
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgec41d75" class="outline-4"&gt;
&lt;h4 id="orgec41d75"&gt;PyPi&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgec41d75"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;from fastai.text import (
    URLs,
    untar_data,
    TextList,
    )
import hvplot.pandas
import pandas
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org244d18c" class="outline-4"&gt;
&lt;h4 id="org244d18c"&gt;Others&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org244d18c"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;from graeae import CountPercentage, EmbedHoloviews
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org578920e" class="outline-3"&gt;
&lt;h3 id="org578920e"&gt;Setup&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org578920e"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org7e94170" class="outline-4"&gt;
&lt;h4 id="org7e94170"&gt;Plotting&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org7e94170"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Embed = partial(
    EmbedHoloviews,
    folder_path="../../files/posts/fastai/hand-rolling-a-countvectorizer/")
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org86196dd" class="outline-4"&gt;
&lt;h4 id="org86196dd"&gt;The Data Set&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org86196dd"&gt;
&lt;p&gt;
The data-set is a collection of 50,000 IMDB reviews &lt;a href="https://course.fast.ai/datasets.html"&gt;hosted on AWS Open Datasets&lt;/a&gt; as part of the fastai datasets collection. We're going to try and create a classifier that can predict the "sentiment" of reviews. The &lt;a href="http://ai.stanford.edu/~amaas/data/sentiment/"&gt;original dataset&lt;/a&gt; comes from Stanford University.
&lt;/p&gt;

&lt;p&gt;
To make it easier to experiment, we'll initially load a sub-set of the dataset that fastai prepared. The &lt;a href="https://docs.fast.ai/datasets.html#URLs"&gt;URLs&lt;/a&gt; class contains the URLs for the datasets that fastai has uploaded and the &lt;a href="https://docs.fast.ai/datasets.html#untar_data"&gt;&lt;code&gt;untar_data&lt;/code&gt;&lt;/a&gt; function downloads data from the URL given to a given (or in this case default) location.
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;path = untar_data(URLs.IMDB_SAMPLE)
print(path)
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
/home/athena/.fastai/data/imdb_sample
&lt;/pre&gt;


&lt;p&gt;
The &lt;code&gt;untar_data&lt;/code&gt; function doesn't actually load the data for us, so we'll use pandas to do that.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sample_frame = pandas.read_csv(path/"texts.csv")
print(sample_frame.head())
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
      label                                               text  is_valid
0  negative  Un-bleeping-believable! Meg Ryan doesn't even ...     False
1  positive  This is a extremely well-made film. The acting...     False
2  negative  Every once in a long while a movie will come a...     False
3  positive  Name just says it all. I watched this movie wi...     False
4  negative  This movie succeeds at being one of the most u...     False
&lt;/pre&gt;


&lt;p&gt;
The &lt;code&gt;is_valid&lt;/code&gt; column is kind of interesting here especially since the first examples are all false… but I couldn't find an explanation for it on the data-download page.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;CountPercentage(sample.label)()
&lt;/pre&gt;&lt;/div&gt;

&lt;table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"&gt;


&lt;colgroup&gt;
&lt;col class="org-left"&gt;

&lt;col class="org-right"&gt;

&lt;col class="org-right"&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope="col" class="org-left"&gt;Value&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;Count&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;Percent (%)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class="org-left"&gt;negative&lt;/td&gt;
&lt;td class="org-right"&gt;524&lt;/td&gt;
&lt;td class="org-right"&gt;52.40&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;positive&lt;/td&gt;
&lt;td class="org-right"&gt;476&lt;/td&gt;
&lt;td class="org-right"&gt;47.60&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;
So it is nearly balanced but with a slight bias toward negative comments.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;CountPercentage(sample.is_valid)()
&lt;/pre&gt;&lt;/div&gt;

&lt;table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"&gt;


&lt;colgroup&gt;
&lt;col class="org-left"&gt;

&lt;col class="org-right"&gt;

&lt;col class="org-right"&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope="col" class="org-left"&gt;Value&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;Count&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;Percent (%)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class="org-left"&gt;False&lt;/td&gt;
&lt;td class="org-right"&gt;800&lt;/td&gt;
&lt;td class="org-right"&gt;80.00&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;True&lt;/td&gt;
&lt;td class="org-right"&gt;200&lt;/td&gt;
&lt;td class="org-right"&gt;20.00&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;
Well, so exactly 20% are invalid? Curious.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orge807638" class="outline-4"&gt;
&lt;h4 id="orge807638"&gt;The Text List&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orge807638"&gt;
&lt;p&gt;
To actually work with the dataset we'll use fastai's &lt;a href="https://docs.fast.ai/text.data.html#The-TextList-input-classes"&gt;TextList&lt;/a&gt; instead of pandas' dataframe.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sample_list = TextList.from_csv(path, "texts.csv", cols="text")
sample_split = sample_list.split_from_df(col=2)
sample = (sample_split
	  .label_from_df(cols=0))
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
The original notebook builds the &lt;code&gt;TextList&lt;/code&gt; in a single train-wreck, but if you try and find out what those methods do from the fastai documentation… well, good luck to you, it's easier (although still obscure) to inspect the intermediate objects to try and muddle through what's going on. The ultimate outcome seems to be that &lt;code&gt;sample&lt;/code&gt; is an object with the somewhat pre-processed. It looks like the text is lower-cased and somewhat tokenized. There's also a lot of strange tokens inserted (&lt;code&gt;xxmaj&lt;/code&gt;, &lt;code&gt;xxunk&lt;/code&gt;) which, according to the &lt;a href="https://docs.fast.ai/text.transform.html#Introduction"&gt;tokenization documentation&lt;/a&gt; indicate special tokens - although there's more unknown tokens than I would have expected.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;print(sample.train.x[0])
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
xxbos xxmaj un - xxunk - believable ! xxmaj meg xxmaj ryan does n't even look her usual xxunk lovable self in this , which normally makes me forgive her shallow xxunk acting xxunk . xxmaj hard to believe she was the producer on this dog . xxmaj plus xxmaj kevin xxmaj kline : what kind of suicide trip has his career been on ? xxmaj xxunk ... xxmaj xxunk ! ! ! xxmaj finally this was directed by the guy who did xxmaj big xxmaj xxunk ? xxmaj must be a replay of xxmaj jonestown - hollywood style . xxmaj xxunk !
&lt;/pre&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;print(sample_frame.text.iloc[0])
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
Un-bleeping-believable! Meg Ryan doesn't even look her usual pert lovable self in this, which normally makes me forgive her shallow ticky acting schtick. Hard to believe she was the producer on this dog. Plus Kevin Kline: what kind of suicide trip has his career been on? Whoosh... Banzai!!! Finally this was directed by the guy who did Big Chill? Must be a replay of Jonestown - hollywood style. Wooofff!
&lt;/pre&gt;


&lt;p&gt;
Here's the category fo that review.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;print(sample.train.y[0])
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
negative
&lt;/pre&gt;


&lt;p&gt;
Note that the output looks like a string, but it's actually a fastai "type".
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;print(type(sample.train.y[0]))
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
&amp;lt;class 'fastai.core.Category'&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org5de6526" class="outline-3"&gt;
&lt;h3 id="org5de6526"&gt;Creating a Term-Document Matrix&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org5de6526"&gt;
&lt;p&gt;
Here we'll create a matrix that counts the number of times each token appears in each document.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org7d1b021" class="outline-2"&gt;
&lt;h2 id="org7d1b021"&gt;End&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org7d1b021"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orged53df1" class="outline-3"&gt;
&lt;h3 id="orged53df1"&gt;Reference&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orged53df1"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgf8a3c3c" class="outline-4"&gt;
&lt;h4 id="orgf8a3c3c"&gt;The Dataset&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgf8a3c3c"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Andrew L. Maas, Raymond E. Daly, Peter T. Pham, Dan Huang, Andrew Y. Ng, and Christopher Potts. 2011. Learning word vectors for sentiment analysis. In Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics: Human Language Technologies - Volume 1 (HLT ’11). Association for Computational Linguistics, USA, 142–150&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>fastai</category><category>nlp</category><guid>https://necromuralist.github.io/Neurotic-Networking/posts/fastai/hand-rolling-a-countvectorizer/</guid><pubDate>Sat, 04 Jan 2020 01:21:23 GMT</pubDate></item></channel></rss>